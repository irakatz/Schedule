0 一些基础的事情
0.1 CPU，指令集，Linux的关系
CPU有自己独特的指令集。Linux可以在不同CPU下编译成不同的版本，适应相应的指令集。
项目用的是risc-v指令集，应该是用相应编译器把rust语言翻译成这种指令集。实际上rust和risc-v是两个独立概念。
0.2 这个操作系统实现了什么
创建了一个基于qemu+用rust写的OS，现有的6个Lab包含中断处理，物理内存分配与管理，页表映射（VA到PA），线程调度，设备驱动和为用户程序提供服务*****待补充
uCore包括内存（VA，PA），进程，FS（虚拟FS和简单FS）。
0.3 为什么要用rust*来源自wrj论文
C会有安全问题，因为程序员可能没有管理好内存，但是如果自动管理内存，程序会因为GC暂停，GC也有开销，这不利于性能。Rust在编译期检查内存安全（使用所有权，生命周期）；使用send与sync限制跨线程传递和多线程访问，以实现线程安全。
rust可以实现基本的底层控制，但是不是太底层。rust支持面向对象，并且优化了这些抽象
另外尽量减少代码，减少造轮子。
*关于引用与借用：https://zhuanlan.zhihu.com/p/59998584
